//查询公司之中工资最低的雇员的完整信息
/*
	1:首先要知道工资最低是多少
	2:再把工资最低的数据放进WHERE字句就可以了
*/
SELECT * 
FROM emp
WHERE sal = (SELECT MIN(saL)
	FROM emp
	);

------------------------------------------
//查询出基本工资比ALLEN低的全部雇员信息
/*
	1:首先要知道ALLEN的工资
	2:把ALLEN的工资当成是一条数据在WHERE查询
*/

SELECT *
FROM emp
WHERE sal < (
	SELECT sal
	FROM emp
	WHERE ename = 'ALLEN');
	
-------------------------------------------
//查询基本工资高于公司平均薪金的全部雇员信息
/*
	1:查询公司的平均薪金
	2:将平均薪金数据放在WHERE查询字句中
*/
SELECT *
FROM emp
WHERE sal > (
	SELECT AVG(sal)
	FROM emp);
	
----------------------------------------------
//查找出与ALLEN从事同一工作，并且基本工资高于雇员编号为7521的全部雇员信息

/*
	1:找出ALLEN是从事什么工作的
	2:查找出雇员7521的薪金是多少
	3:把条件都放在WHERE查询字句中
*/
SELECT job
FROM emp
WHERE ename  = 'ALLEN';

SELECT sal
FROM emp
WHERE empno = '7521';

SELECT *
FROM emp
WHERE job = (
	SELECT job
	FROM emp
	WHERE ename  = 'ALLEN')
	AND sal>(
	SELECT sal
	FROM emp
	WHERE empno = '7521');
--------------------------------------------------------------------
//查询与SCOTT从事同一工作且工资相同的雇员信息
/*
	1:查询SCOTT的工作和工资(一行多列)
	2:将查询的结果放进WHERE字句中
*/
SELECT job,sal
FROM emp
WHERE ename = 'SCOTT';

SELECT *
FROM emp
WHERE (job,sal) = (
	SELECT job,sal
	FROM emp
	WHERE ename = 'SCOTT')
	AND ename ! = 'SCOTT';
	
----------------------------------------------------------------
//查询与雇员7566从事同一工作且领导相同的全部雇员信息
/*
	1:查询雇员7566的工作和领导
	2:将查询的结果放进WHERE字句中
*/
SELECT job,mgr
FROM emp
WHERE empno = '7566';

SELECT *
FROM emp
WHERE (job,mgr) = (
	SELECT job,mgr
	FROM emp
	WHERE empno = '7566')
	AND empno != '7566';
-----------------------------------------------------------------
//查询与ALLEN从事同一工作且在同一年雇佣的全部雇员信息（包括ALLEN）
/*
	1:查询ALLEN从事的工作,并且hiredate的年数
	2:将查询的结果放进WHERE字句中
*/

SELECT job,TO_CHAR(hiredate,'yyyy')
FROM emp
WHERE ename = 'ALLEN';


SELECT *
FROM emp
WHERE (job,TO_CHAR(hiredate,'yyyy')) = (
	SELECT job,TO_CHAR(hiredate,'yyyy')
	FROM emp
	WHERE ename = 'ALLEN');
	
---------------------------------------------------------------------
//查询出与每个部门中最低工资相同的全部雇员信息
/*
	1:先对部门分组,查询最低工资
	2:查出的结果是一个多行一列的数据(也就是一个范围)
	3:对于一个范围,我们有IN操作符
	4:IN操作符可以直接用于子查询中
	5:在IN操作符中,不能有NULL值

*/
SELECT MIN(sal)
FROM emp
GROUP BY deptno;

SELECT *
FROM emp
WHERE sal IN (
	SELECT MIN(sal)
	FROM emp
	GROUP BY deptno);

---------------------------------------------------------------------
//列出每个部门经理的工资
/*
	1:这里我们假设一个部门只有一个经理
	2:所以我们直接使用了MIN(sal)
*/
SELECT MIN(sal)
FROM emp
WHERE job = 'MANAGER'
GROUP BY deptno;

------------------------------------------------------------------
//使用=ANY操作符完成查询
/*
	1:等于ANY和IN是没什么区别的

*/
SELECT *
FROM emp
WHERE sal = ANY (
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);
-------------------------------------------------------
//使用>ANY操作符完成查询
/*
	1:>ANY表示的是比最小的数据还要大
*/
SELECT *
FROM emp
WHERE sal > ANY(
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);
	
-----------------------------------------------------
//使用<ANY操作符完成查询
/*
	1:<ANY表示的是比最大数据要小
*/

SELECT *
FROM emp
WHERE sal < ANY (
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);

----------------------------------------------------
使用<>ALL操作符完成查询
/*
	!=ANY会输出所有的数据
*/
SELECT *
FROM emp
WHERE sal != ANY (
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);
---------------------------------------------------
//使用<>ALL操作符完成查询

/*
	这个跟NOT IN操作符是一样的
*/
SELECT *
FROM emp
WHERE sal != ALL (
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);

----------------------------------------------------
//使用>ALL操作符完成查询
/*
	比最大的数据还要大
	<ALL就是比最小的数据还要小
	=ALL所有数据都不返回
*/
SELECT *
FROM emp
WHERE sal > ALL (
	SELECT MIN(sal)
	FROM emp
	WHERE job = 'MANAGER'
	GROUP BY deptno);
----------------------------------------------
//验证exists结构
/*
	EXISTS主要是用来判断有没有NULL值的,返回的是BOOLEAN值类型.
*/
SELECT * 
FROM emp
WHERE EXISTS(
  SELECT * 
  FROM emp
  WHERE empno=9999) ;
  
  -------------------------------------------------------------------
//查询部门编号、雇员人数、平均工资，并且要求这些部门的平均工资高于公司平均薪金
/*
	1:查询公司的平均工资
	2:对部门进行分组统计,统计出人数,平均工资
	3:对统计后的部门平均工资进行筛选
*/

SELECT TRUNC(AVG(sal))
FROM emp;

SELECT deptno,COUNT(empno),TRUNC(AVG(sal))
FROM emp
GROUP BY deptno
HAVING TRUNC(AVG(sal)) > (
	SELECT TRUNC(AVG(sal))
	FROM emp);
	
-------------------------------------------------------------
//查询出每个部门平均工资最高的部门名称及平均工资
/*
	1:查询平均工资最高的,嵌套函数
	2:返回的是单行单列数据,所以要么是WHERE字句或HAVING字句
	3:题目的意思是HAVING字句
*/
SELECT MAX(AVG(sal))
FROM emp
GROUP BY deptno;


SELECT d.dname,TRUNC(AVG(e.sal))
FROM emp e , dept d
WHERE e.deptno = d.deptno
GROUP BY d.deptno,d.dname,d.loc
HAVING AVG(e.sal) = (
	SELECT MAX(AVG(sal))
	FROM emp
	GROUP BY deptno	);

---------------------------------------------
//要求查询出每个部门的编号、名称、位置、部门人数、平均工资
/*
	1:多分组字段查询
	2:虽然可以得出结果,但是效果不高
*/
SELECT d.deptno,d.dname,d.loc,COUNT(empno),AVG(sal)
FROM emp e,dept d
WHERE e.deptno(+) = d.deptno
GROUP BY d.dname,d.loc,d.deptno;

--------------------------------------------------
//要求查询出每个部门的编号、名称、位置、部门人数、平均工资
/*
	1:使用子查询
	2:把能直接表示出来的就表示出来
	3:需要用到统计函数的,我就用另一张表
*/

SELECT d.deptno,d.dname,d.loc,temp.counts,temp.avgs
FROM dept d ,(
	SELECT deptno,COUNT(empno) counts,AVG(sal)avgs
	FROM emp 
	GROUP BY deptno) temp
WHERE d.deptno = temp.deptno(+);

-----------------------------------------------------------
//查询出所有在部门“SALES”（销售部）工作的员工的编号、姓名、基本工资、奖金、职位、雇佣日期、部门的最高和最低工资。
/*
	1:把直接查询的,不用分组统计的,直接表示出来
	2:要分组统计的,FROM子句子查询实现.
*/

SELECT e.empno,e.deptno,e.ename,sal,NVL(comm,0),job,hiredate,temp.losal,temp.hisal
FROM emp e,dept d,(
	SELECT deptno dno,MAX(sal) losal,MIN(sal) hisal
	FROM emp
	GROUP BY deptno	) temp
WHERE e.deptno = d.deptno
	AND temp.dno = e.deptno
	AND d.dname = 'SALES';
---------------------------------------------------------------------------------
/*
	我自己写的是2个表查询
		1:直接判断部门名称是'SALES'
	书上:
		1:用了WHERE字句子查询
		2:根据部门名称限制了部门编号
*/
SELECT e.empno, e.ename, e.sal, e.comm, e.job ,e.hiredate , temp.max ,temp.min
FROM emp e , (
    SELECT deptno dno , MAX(sal) max , MIN(sal) min
    FROM emp 
    GROUP BY deptno) temp 
WHERE e.deptno=(
      SELECT deptno 
      FROM dept 
      WHERE dname='SALES')
      AND e.deptno=temp.dno ;
	
--------------------------------------------------------------------------

//查询出所有薪金高于公司平均薪金的员工编号、姓名、基本工资、职位、雇佣日期，所在部门名称、位置，上级领导姓名，
公司的工资等级，部门人数、平均工资、平均服务年限。
/*
	emp e
	emp m 
	salgrade s
	dept d
*/

SELECT e.empno,e.ename,e.sal,e.job,e.hiredate,d.dname,d.loc,temp.salavgs,temp.yearsavgs,e.mgr,s.grade,temp.count
FROM emp e,emp m ,salgrade s, dept d,(
	SELECT deptno dno,COUNT(empno) count,COUNT(empno),AVG(sal) salavgs,AVG(MONTHS_BETWEEN(SYSDATE,hiredate)/12) yearsavgs
	FROM emp
	GROUP BY deptno) temp
WHERE e.deptno = d.deptno(+)
	AND	e.sal BETWEEN s.losal AND s.hisal
	AND e.mgr = m.empno(+)
	AND temp.dno(+) = e.deptno
	AND e.sal > (
		SELECT AVG(sal)	
		FROM emp);

	
	
SELECT AVG(sal)	
FROM emp;

SELECT deptno dno,AVG(e.sal) salavgs,AVG(MONTHS_BETWEEN(SYSDATE,e.hiredate)/12) yearsavgs
FROM emp
GROUP BY deptno


-------------------------------------------------------------------------------------------------------------------
//列出薪金比“ALLEN”或“CLARK”多的所有员工的编号、姓名、基本工资、部门名称、其领导姓名，部门人数。
/*
	1:先求出'ALLEN'和'CLARK'的薪金
	2:用WHERE条件限定
*/
SELECT sal
FROM emp
WHERE ename = 'ALLEN' OR ename = 'CLARK' ;

SELECT e.empno,e.ename,e.sal,d.dname,m.ename,temp.counts
FROM emp e, dept d, emp m,(
	SELECT deptno dno,COUNT(empno) counts
	FROM emp
	GROUP BY deptno) temp
WHERE e.deptno = d.deptno
	AND e.mgr = m.empno(+)
	AND temp.dno = e.deptno
	AND e.sal > ANY (
	SELECT sal
	FROM emp
	WHERE ename = 'ALLEN' OR ename = 'CLARK' )
	AND e.ename NOT IN('ALLEN','CLARK');

	
SELECT deptno dno,COUNT(empno)
FROM emp
GROUP BY deptno;

-------------------------------------------------------------------
列出公司各个部门的经理（假设每个部门只有一个经理，job为“MANAGER”）的姓名、薪金、部门名称、部门人数、部门平均工资。
/*
	1:对部门进行分组,统计出部门人数,部门的平均工资
	2:职位是经理
*/

SELECT deptno dno,COUNT(empno),AVG(sal) 
FROM emp
WHERE job = 'MANAGER';
GROUP BY deptno

SELECT e.ename,e.sal,d.dname,temp.counts,temp.avgsal
FROM emp e ,dept d,(
	SELECT deptno dno,COUNT(empno) counts,AVG(sal) avgsal 
	FROM emp
	GROUP BY deptno) temp
WHERE e.deptno = d.deptno(+)
	AND job = 'MANAGER'
	AND temp.dno = e.deptno;
	
-----------------------------------------------------------
//查询出公司每个部门的编号、名称、位置、部门人数、平均工资
/*
	1:对部门进行分组,查出部门人数,平均工资,部门编号
*/
SELECT deptno,COUNT(empno)counts,AVG(sal)avgsal
FROM emp
GROUP BY deptno;

SELECT d.deptno,d.dname,d.loc,temp.counts,temp.avgsal
FROM dept d ,(
	SELECT deptno,COUNT(empno)counts,AVG(sal)avgsal
	FROM emp
	GROUP BY deptno)temp
WHERE  temp.deptno(+) = d.deptno;
	
















