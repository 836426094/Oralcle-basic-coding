//查看emp表中的数据量
SELECT COUNT(*)
FROM emp;

-----------------------
//统计出基本工资高于1500的全部雇员信息
SELECT *
FROM emp
WHERE sal > 1500;

------------------------------------
//现在要求查询出所有基本工资小于等于2000的全部雇员信息
SELECT *
FROM emp
WHERE sal<=2000;

----------------------------------------------------
//根据之前的查询结果发现SMITH的工资最低，所以现在希望可以取得SMITH的详细资料
SELECT *
FROM emp
WHERE ename = 'SMITH';

---------------------------------------------------
//查询出所有办事员（CLERK）的雇员信息
SELECT *
FROM emp
WHERE job = 'CLERK';

---------------------------------------------

//取得了所有办事员的资料之后，为了和其他职位的雇员对比，现在决定再查询所有不是办事员的雇员信息。
SELECT *
FROM emp
WHERE job != 'CLERK';

-----------------------------------------------------------------------

//查询出工资范围在1500 ~ 3000（包含1500和3000）的全部雇员信息
SELECT *
FROM emp
WHERE sal >=1500 AND sal <= 3000;

--------------------------------------------------------------

//查询职位是销售人员，并且基本工资高于1200的所有雇员信息
SELECT *
FROM emp
WHERE job = 'SALESMAN' AND sal > 1200;

--------------------------------------------------------

//要求查询出10部门中的经理或者是20部门的业务员的信息
SELECT *
FROM emp
WHERE (deptno = 10 AND job = 'MANAGER') OR (deptno = 20 AND job = 'CLEAR');

--------------------------------------------------------

//查询不是办事员的且基本工资大于2000的全部雇员信息
SELECT *
FROM emp
WHERE job != 'CLERK' AND sal>2000;

------------------------------------------------------

//使用BETWEEN…AND操作符查询出工资范围在1500 ~ 3000（包含1500和3000）的全部雇员信息
SELECT *
FROM emp
WHERE sal BETWEEN 1500 AND 3000;

----------------------------------------------------
//查询出在1981年雇佣的全部雇员信息
SELECT *
FROM emp
WHERE hiredate BETWEEN '01-1月-81'AND'31-12月-81';

----------------------------------------------------
//使用==进行NULL比较
//NULL不能使用"="来操作,有专门的判断 IS NULL,IS NOT NULL;
SELECT *
FROM emp
WHERE (comm = null) AND empno = 7369;
---------------------------------------------------------------

//查询出所有领取佣金的雇员的完整信息
SELECT *
FROM emp
WHERE comm IS NOT NULL;

--------------------------------------

//查询所有不领取佣金的雇员的完整信息
SELECT *
FROM emp
WHERE comm IS NULL;
-----------------------------------

//列出所有的不领取奖金的雇员，而且同时要求这些雇员的基本工资大于2000的全部雇员信息
SELECT *
FROM emp
WHERE comm IS NULL AND sal>2000;

--------------------------------------------------
//找出不收取佣金或收取的佣金低于100的员工。
SELECT ename
FROM emp
WHERE comm IS NULL  OR comm<100;

-------------------------------------
//找出收取佣金的员工的不同工作。
SELECT DISTINCT job
FROM emp
WHERE comm IS NOT NULL;

--------------------------------------
//查询出雇员编号是7369、7788、7566的雇员信息

SELECT *
FROM emp
WHERE empno IN(7369,7788,7566);

----------------------------------
//现在查询除了7369、7788、7566之外的雇员信息
SELECT *
FROM emp
WHERE empno NOT IN(7369,7788,7566);

----------------------------------------------
//在使用NOT IN操作符中设置null
//在NOT IN 操作符中有NULL值,是不可以计算出结果的
SELECT *
FROM emp
WHERE empno NOT IN(7566,NULL);

--------------------------------------------------
//现在查询出雇员姓名是以S开头的全部雇员信息
SELECT *
FROM emp 
WHERE ename LIKE 'S%';

-------------------------------------------------

//现在要求查询雇员姓名的第二个字母是“M”的全部雇员信息

SELECT *
FROM emp
WHERE ename LIKE '_M%';

-------------------------------------------------
//查询出姓名中任意位置包含字母F的雇员信息
SELECT *
FROM emp
WHERE ename LIKE'%F%';

-----------------------------------------------------
//查询雇员姓名长度为6或者是超过6个的雇员信息
SELECT *
FROM emp
WHERE ename LIKE'______%';

---------------------------------------------------
//现在要求查询出雇员基本工资中包含1或者是在81年雇佣的全部雇员
SELECT *
FROM emp
WHERE sal LIKE'%1%' OR hiredate LIKE'%81%';

--------------------------------------------------
//不设置查询关键字表示查询全部
SELECT *
FROM emp
WHERE empno LIKE '%%' OR ename LIKE '%%' OR job LIKE '%%' OR hiredate LIKE '%%' 
	OR  sal LIKE '%%' OR comm LIKE '%%' ;
	
--------------------------------------------------------------------
//找出部门10中所有经理（MANAGER），部门20中所有办事员（CLERK），
既不是经理又不是办事员但其薪金大于2000的所有员工的详细资料，并且要求这些雇员的姓名之中包含有字母S或字母K
SELECT *
FROM emp
WHERE (deptno = 10 AND job = 'MANAGER') OR (deptno = 20 AND job = 'CLERK')
	OR((job != 'MANAGER' AND job != 'CLERK') AND sal >2000)
	AND ((ename LIKE'%S%') OR ename LIKE('%K%'));

-------------------------------------------------------------------
//查询雇员的完整信息并且按照基本工资由高到低进行排序

SELECT *
FROM emp
ORDER BY sal DESC;

---------------------------------------------------------------
//下面修改之前的查询，要求按照基本工资由低到高进行排序
SELECT * 
FROM emp
ORDER BY sal;

-----------------------------------------------
//查询出所有办事员（CLERK）的详细资料列出，并且按照基本工资由低到高排序
SELECT *
FROM emp
WHERE job = 'CLERK'
ORDER BY sal;
	
-----------------------------------------------------
//查询出所有雇员信息，要求按照基本工资由高到低排序，如果工资相等则按照雇佣日期进行排序，按照由早到晚的顺序
SELECT *
FROM emp
ORDER BY sal DESC,hiredate;
















































